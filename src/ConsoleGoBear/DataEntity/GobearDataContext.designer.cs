#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleGoBear.DataEntity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Gobear")]
	public partial class GobearDataContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMake(Make instance);
    partial void UpdateMake(Make instance);
    partial void DeleteMake(Make instance);
    partial void InsertModel(Model instance);
    partial void UpdateModel(Model instance);
    partial void DeleteModel(Model instance);
    partial void InserttblMotorSearch(tblMotorSearch instance);
    partial void UpdatetblMotorSearch(tblMotorSearch instance);
    partial void DeletetblMotorSearch(tblMotorSearch instance);
    #endregion
		
		public GobearDataContextDataContext() : 
				base(global::ConsoleGoBear.Properties.Settings.Default.GobearConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public GobearDataContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GobearDataContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GobearDataContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GobearDataContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Make> Makes
		{
			get
			{
				return this.GetTable<Make>();
			}
		}
		
		public System.Data.Linq.Table<Model> Models
		{
			get
			{
				return this.GetTable<Model>();
			}
		}
		
		public System.Data.Linq.Table<tblMotorSearch> tblMotorSearches
		{
			get
			{
				return this.GetTable<tblMotorSearch>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Make")]
	public partial class Make : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private EntitySet<Model> _Models;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Make()
		{
			this._Models = new EntitySet<Model>(new Action<Model>(this.attach_Models), new Action<Model>(this.detach_Models));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Make_Model", Storage="_Models", ThisKey="ID", OtherKey="MakeID")]
		public EntitySet<Model> Models
		{
			get
			{
				return this._Models;
			}
			set
			{
				this._Models.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Models(Model entity)
		{
			this.SendPropertyChanging();
			entity.Make = this;
		}
		
		private void detach_Models(Model entity)
		{
			this.SendPropertyChanging();
			entity.Make = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Model")]
	public partial class Model : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _MakeID;
		
		private string _Capacity;
		
		private EntityRef<Make> _Make;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMakeIDChanging(string value);
    partial void OnMakeIDChanged();
    partial void OnCapacityChanging(string value);
    partial void OnCapacityChanged();
    #endregion
		
		public Model()
		{
			this._Make = default(EntityRef<Make>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakeID", DbType="VarChar(50)")]
		public string MakeID
		{
			get
			{
				return this._MakeID;
			}
			set
			{
				if ((this._MakeID != value))
				{
					if (this._Make.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMakeIDChanging(value);
					this.SendPropertyChanging();
					this._MakeID = value;
					this.SendPropertyChanged("MakeID");
					this.OnMakeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="VarChar(50)")]
		public string Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Make_Model", Storage="_Make", ThisKey="MakeID", OtherKey="ID", IsForeignKey=true)]
		public Make Make
		{
			get
			{
				return this._Make.Entity;
			}
			set
			{
				Make previousValue = this._Make.Entity;
				if (((previousValue != value) 
							|| (this._Make.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Make.Entity = null;
						previousValue.Models.Remove(this);
					}
					this._Make.Entity = value;
					if ((value != null))
					{
						value.Models.Add(this);
						this._MakeID = value.ID;
					}
					else
					{
						this._MakeID = default(string);
					}
					this.SendPropertyChanged("Make");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMotorSearch")]
	public partial class tblMotorSearch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BrandName;
		
		private string _ModelID;
		
		private string _ModelName;
		
		private string _ModelYear;
		
		private string _Capacity;
		
		private string _InsurerID;
		
		private string _InsurerName;
		
		private string _InsurerLogo;
		
		private string _InsurerSmallLogo;
		
		private string _PlanID;
		
		private string _PlanName;
		
		private string _SupplierID;
		
		private string _Premium;
		
		private string _OriginalPremium;
		
		private string _DiscountValue;
		
		private string _DiscountUnit;
		
		private string _DiscountUntill;
		
		private string _TotalScore;
		
		private string _Score;
		
		private string _PlanCategory;
		
		private string _HasQuotes;
		
		private string _PromotionID;
		
		private string _PromotionTitle;
		
		private string _UrlTitle;
		
		private string _Class;
		
		private string _SupplierName;
		
		private string _IsBroker;
		
		private string _Link;
		
		private string _SKUCode;
		
		private string _CheckoutNotes;
		
		private string _OD;
		
		private string _ODDD;
		
		private string _Flood;
		
		private string _FIX;
		
		private string _TP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnModelIDChanging(string value);
    partial void OnModelIDChanged();
    partial void OnModelNameChanging(string value);
    partial void OnModelNameChanged();
    partial void OnModelYearChanging(string value);
    partial void OnModelYearChanged();
    partial void OnCapacityChanging(string value);
    partial void OnCapacityChanged();
    partial void OnInsurerIDChanging(string value);
    partial void OnInsurerIDChanged();
    partial void OnInsurerNameChanging(string value);
    partial void OnInsurerNameChanged();
    partial void OnInsurerLogoChanging(string value);
    partial void OnInsurerLogoChanged();
    partial void OnInsurerSmallLogoChanging(string value);
    partial void OnInsurerSmallLogoChanged();
    partial void OnPlanIDChanging(string value);
    partial void OnPlanIDChanged();
    partial void OnPlanNameChanging(string value);
    partial void OnPlanNameChanged();
    partial void OnSupplierIDChanging(string value);
    partial void OnSupplierIDChanged();
    partial void OnPremiumChanging(string value);
    partial void OnPremiumChanged();
    partial void OnOriginalPremiumChanging(string value);
    partial void OnOriginalPremiumChanged();
    partial void OnDiscountValueChanging(string value);
    partial void OnDiscountValueChanged();
    partial void OnDiscountUnitChanging(string value);
    partial void OnDiscountUnitChanged();
    partial void OnDiscountUntillChanging(string value);
    partial void OnDiscountUntillChanged();
    partial void OnTotalScoreChanging(string value);
    partial void OnTotalScoreChanged();
    partial void OnScoreChanging(string value);
    partial void OnScoreChanged();
    partial void OnPlanCategoryChanging(string value);
    partial void OnPlanCategoryChanged();
    partial void OnHasQuotesChanging(string value);
    partial void OnHasQuotesChanged();
    partial void OnPromotionIDChanging(string value);
    partial void OnPromotionIDChanged();
    partial void OnPromotionTitleChanging(string value);
    partial void OnPromotionTitleChanged();
    partial void OnUrlTitleChanging(string value);
    partial void OnUrlTitleChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnIsBrokerChanging(string value);
    partial void OnIsBrokerChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnSKUCodeChanging(string value);
    partial void OnSKUCodeChanged();
    partial void OnCheckoutNotesChanging(string value);
    partial void OnCheckoutNotesChanged();
    partial void OnODChanging(string value);
    partial void OnODChanged();
    partial void OnODDDChanging(string value);
    partial void OnODDDChanged();
    partial void OnFloodChanging(string value);
    partial void OnFloodChanged();
    partial void OnFIXChanging(string value);
    partial void OnFIXChanged();
    partial void OnTPChanging(string value);
    partial void OnTPChanged();
    #endregion
		
		public tblMotorSearch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="VarChar(255)")]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._BrandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelID", DbType="VarChar(255)")]
		public string ModelID
		{
			get
			{
				return this._ModelID;
			}
			set
			{
				if ((this._ModelID != value))
				{
					this.OnModelIDChanging(value);
					this.SendPropertyChanging();
					this._ModelID = value;
					this.SendPropertyChanged("ModelID");
					this.OnModelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="VarChar(255)")]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this.OnModelNameChanging(value);
					this.SendPropertyChanging();
					this._ModelName = value;
					this.SendPropertyChanged("ModelName");
					this.OnModelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelYear", DbType="VarChar(255)")]
		public string ModelYear
		{
			get
			{
				return this._ModelYear;
			}
			set
			{
				if ((this._ModelYear != value))
				{
					this.OnModelYearChanging(value);
					this.SendPropertyChanging();
					this._ModelYear = value;
					this.SendPropertyChanged("ModelYear");
					this.OnModelYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="VarChar(255)")]
		public string Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsurerID", DbType="VarChar(255)")]
		public string InsurerID
		{
			get
			{
				return this._InsurerID;
			}
			set
			{
				if ((this._InsurerID != value))
				{
					this.OnInsurerIDChanging(value);
					this.SendPropertyChanging();
					this._InsurerID = value;
					this.SendPropertyChanged("InsurerID");
					this.OnInsurerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsurerName", DbType="VarChar(255)")]
		public string InsurerName
		{
			get
			{
				return this._InsurerName;
			}
			set
			{
				if ((this._InsurerName != value))
				{
					this.OnInsurerNameChanging(value);
					this.SendPropertyChanging();
					this._InsurerName = value;
					this.SendPropertyChanged("InsurerName");
					this.OnInsurerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsurerLogo", DbType="VarChar(255)")]
		public string InsurerLogo
		{
			get
			{
				return this._InsurerLogo;
			}
			set
			{
				if ((this._InsurerLogo != value))
				{
					this.OnInsurerLogoChanging(value);
					this.SendPropertyChanging();
					this._InsurerLogo = value;
					this.SendPropertyChanged("InsurerLogo");
					this.OnInsurerLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsurerSmallLogo", DbType="VarChar(255)")]
		public string InsurerSmallLogo
		{
			get
			{
				return this._InsurerSmallLogo;
			}
			set
			{
				if ((this._InsurerSmallLogo != value))
				{
					this.OnInsurerSmallLogoChanging(value);
					this.SendPropertyChanging();
					this._InsurerSmallLogo = value;
					this.SendPropertyChanged("InsurerSmallLogo");
					this.OnInsurerSmallLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanID", DbType="VarChar(255)")]
		public string PlanID
		{
			get
			{
				return this._PlanID;
			}
			set
			{
				if ((this._PlanID != value))
				{
					this.OnPlanIDChanging(value);
					this.SendPropertyChanging();
					this._PlanID = value;
					this.SendPropertyChanged("PlanID");
					this.OnPlanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanName", DbType="VarChar(255)")]
		public string PlanName
		{
			get
			{
				return this._PlanName;
			}
			set
			{
				if ((this._PlanName != value))
				{
					this.OnPlanNameChanging(value);
					this.SendPropertyChanging();
					this._PlanName = value;
					this.SendPropertyChanged("PlanName");
					this.OnPlanNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="VarChar(255)")]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Premium", DbType="VarChar(255)")]
		public string Premium
		{
			get
			{
				return this._Premium;
			}
			set
			{
				if ((this._Premium != value))
				{
					this.OnPremiumChanging(value);
					this.SendPropertyChanging();
					this._Premium = value;
					this.SendPropertyChanged("Premium");
					this.OnPremiumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalPremium", DbType="VarChar(255)")]
		public string OriginalPremium
		{
			get
			{
				return this._OriginalPremium;
			}
			set
			{
				if ((this._OriginalPremium != value))
				{
					this.OnOriginalPremiumChanging(value);
					this.SendPropertyChanging();
					this._OriginalPremium = value;
					this.SendPropertyChanged("OriginalPremium");
					this.OnOriginalPremiumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountValue", DbType="VarChar(255)")]
		public string DiscountValue
		{
			get
			{
				return this._DiscountValue;
			}
			set
			{
				if ((this._DiscountValue != value))
				{
					this.OnDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._DiscountValue = value;
					this.SendPropertyChanged("DiscountValue");
					this.OnDiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountUnit", DbType="VarChar(255)")]
		public string DiscountUnit
		{
			get
			{
				return this._DiscountUnit;
			}
			set
			{
				if ((this._DiscountUnit != value))
				{
					this.OnDiscountUnitChanging(value);
					this.SendPropertyChanging();
					this._DiscountUnit = value;
					this.SendPropertyChanged("DiscountUnit");
					this.OnDiscountUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountUntill", DbType="VarChar(255)")]
		public string DiscountUntill
		{
			get
			{
				return this._DiscountUntill;
			}
			set
			{
				if ((this._DiscountUntill != value))
				{
					this.OnDiscountUntillChanging(value);
					this.SendPropertyChanging();
					this._DiscountUntill = value;
					this.SendPropertyChanged("DiscountUntill");
					this.OnDiscountUntillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalScore", DbType="VarChar(255)")]
		public string TotalScore
		{
			get
			{
				return this._TotalScore;
			}
			set
			{
				if ((this._TotalScore != value))
				{
					this.OnTotalScoreChanging(value);
					this.SendPropertyChanging();
					this._TotalScore = value;
					this.SendPropertyChanged("TotalScore");
					this.OnTotalScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="VarChar(255)")]
		public string Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanCategory", DbType="VarChar(255)")]
		public string PlanCategory
		{
			get
			{
				return this._PlanCategory;
			}
			set
			{
				if ((this._PlanCategory != value))
				{
					this.OnPlanCategoryChanging(value);
					this.SendPropertyChanging();
					this._PlanCategory = value;
					this.SendPropertyChanged("PlanCategory");
					this.OnPlanCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasQuotes", DbType="VarChar(255)")]
		public string HasQuotes
		{
			get
			{
				return this._HasQuotes;
			}
			set
			{
				if ((this._HasQuotes != value))
				{
					this.OnHasQuotesChanging(value);
					this.SendPropertyChanging();
					this._HasQuotes = value;
					this.SendPropertyChanged("HasQuotes");
					this.OnHasQuotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionID", DbType="VarChar(255)")]
		public string PromotionID
		{
			get
			{
				return this._PromotionID;
			}
			set
			{
				if ((this._PromotionID != value))
				{
					this.OnPromotionIDChanging(value);
					this.SendPropertyChanging();
					this._PromotionID = value;
					this.SendPropertyChanged("PromotionID");
					this.OnPromotionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionTitle", DbType="VarChar(255)")]
		public string PromotionTitle
		{
			get
			{
				return this._PromotionTitle;
			}
			set
			{
				if ((this._PromotionTitle != value))
				{
					this.OnPromotionTitleChanging(value);
					this.SendPropertyChanging();
					this._PromotionTitle = value;
					this.SendPropertyChanged("PromotionTitle");
					this.OnPromotionTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlTitle", DbType="VarChar(255)")]
		public string UrlTitle
		{
			get
			{
				return this._UrlTitle;
			}
			set
			{
				if ((this._UrlTitle != value))
				{
					this.OnUrlTitleChanging(value);
					this.SendPropertyChanging();
					this._UrlTitle = value;
					this.SendPropertyChanged("UrlTitle");
					this.OnUrlTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="VarChar(255)")]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="VarChar(255)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBroker", DbType="VarChar(255)")]
		public string IsBroker
		{
			get
			{
				return this._IsBroker;
			}
			set
			{
				if ((this._IsBroker != value))
				{
					this.OnIsBrokerChanging(value);
					this.SendPropertyChanging();
					this._IsBroker = value;
					this.SendPropertyChanged("IsBroker");
					this.OnIsBrokerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="VarChar(MAX)")]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUCode", DbType="VarChar(255)")]
		public string SKUCode
		{
			get
			{
				return this._SKUCode;
			}
			set
			{
				if ((this._SKUCode != value))
				{
					this.OnSKUCodeChanging(value);
					this.SendPropertyChanging();
					this._SKUCode = value;
					this.SendPropertyChanged("SKUCode");
					this.OnSKUCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckoutNotes", DbType="VarChar(255)")]
		public string CheckoutNotes
		{
			get
			{
				return this._CheckoutNotes;
			}
			set
			{
				if ((this._CheckoutNotes != value))
				{
					this.OnCheckoutNotesChanging(value);
					this.SendPropertyChanging();
					this._CheckoutNotes = value;
					this.SendPropertyChanged("CheckoutNotes");
					this.OnCheckoutNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OD", DbType="VarChar(255)")]
		public string OD
		{
			get
			{
				return this._OD;
			}
			set
			{
				if ((this._OD != value))
				{
					this.OnODChanging(value);
					this.SendPropertyChanging();
					this._OD = value;
					this.SendPropertyChanged("OD");
					this.OnODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ODDD", DbType="VarChar(255)")]
		public string ODDD
		{
			get
			{
				return this._ODDD;
			}
			set
			{
				if ((this._ODDD != value))
				{
					this.OnODDDChanging(value);
					this.SendPropertyChanging();
					this._ODDD = value;
					this.SendPropertyChanged("ODDD");
					this.OnODDDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flood", DbType="VarChar(255)")]
		public string Flood
		{
			get
			{
				return this._Flood;
			}
			set
			{
				if ((this._Flood != value))
				{
					this.OnFloodChanging(value);
					this.SendPropertyChanging();
					this._Flood = value;
					this.SendPropertyChanged("Flood");
					this.OnFloodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIX", DbType="VarChar(255)")]
		public string FIX
		{
			get
			{
				return this._FIX;
			}
			set
			{
				if ((this._FIX != value))
				{
					this.OnFIXChanging(value);
					this.SendPropertyChanging();
					this._FIX = value;
					this.SendPropertyChanged("FIX");
					this.OnFIXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TP", DbType="VarChar(255)")]
		public string TP
		{
			get
			{
				return this._TP;
			}
			set
			{
				if ((this._TP != value))
				{
					this.OnTPChanging(value);
					this.SendPropertyChanging();
					this._TP = value;
					this.SendPropertyChanged("TP");
					this.OnTPChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
